using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace AdventuresOfDad
{
    class Draw
    {
        private readonly string[] _background = {
                "[==========]───────────────────────────────────────────────────────────────────────────────────────────────────────────┐",
                "┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤",
                "│^.....................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "│......................................................................................................................│",
                "└──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘"};
        public Draw()
        {
            Config();
        }

        internal void Config()
        {
            Console.WriteLine("Please configure your terminal to fit the following parameters, hit enter to continue, then enter again to start.");
            Console.ReadLine();
            Console.Clear();
            Console.WriteLine("[──────────]───────────────────────────────────────────────────────────────────────────────────────────────────────────┐");
            Console.WriteLine("┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│............................................Resize terminal to fit this box...........................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("│......................................................................................................................│");
            Console.WriteLine("└──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘");
            Console.ReadLine();
            Console.Clear();
            Thread render = new Thread(DrawLoop);
            render.Start();
        }

        internal void DrawLoop()
        {
            while (true)
            {
                Console.Clear();
                foreach (string line in _background)
                {
                    Console.WriteLine(line);
                }
                Thread.Sleep(40);             
            }
        }
        internal bool BackgroundContains(string character)
        {
            return _background.Any(line => line.Contains(character));
        }
        internal string[] GetBackground()
        {
            return _background;
        }
        internal string GetBackgroundAtIndex(int index)
        {
            return _background[index];
        }
        internal void Replace(string orig, string replace)
        {
            var item = _background.First(c => c.Contains(orig));
            int index = Array.IndexOf(_background, item);
            _background[index] = _background[index].Replace(orig, replace);
        }

        internal void DrawStamina(int stam)
        {
            _background[0] = _background[0].Remove(1, 10);
            if (stam == 10)
            {
                _background[0] = _background[0].Insert(1, "==========");
            }
            else
            {
                _background[0] = _background[0].Insert(1, String.Concat(Enumerable.Repeat("=", stam)));
                int emptyStamina = 10 - stam;
                _background[0] = _background[0].Insert(1+stam, String.Concat(Enumerable.Repeat("-", emptyStamina)));
            }
        }
        internal int findIndex(char sym)
        {
            try
            {
                var item = _background.First(c => c.Contains(sym));
                return Array.IndexOf(_background, item);
            }
            catch
            {
                return -1;
            }

        }
        internal void insertAbove(char origin, string sym, int time)
        {
            //origin: entity to use as origin; places symbol above this
            int index = findIndex(origin);
            int insert = _background[index].Split(origin)[0].Length;
            _background[index - 1] = _background[index - 1].Remove(insert, 1);
            _background[index - 1] = _background[index - 1].Insert(insert, sym);
            Thread.Sleep(time);
            _background[index - 1] = _background[index - 1].Remove(insert, 1);
            _background[index - 1] = _background[index - 1].Insert(insert, ".");
        }
        internal void insertBelow(char origin, string sym, int time)
        {
            //origin: entity to use as origin; places symbol above this
            int index = findIndex(origin);
            int insert = _background[index].Split(origin)[0].Length;
            _background[index + 1] = _background[index + 1].Remove(insert, 1);
            _background[index + 1] = _background[index + 1].Insert(insert, sym);
            Thread.Sleep(time);
            _background[index + 1] = _background[index + 1].Remove(insert, 1);
            _background[index + 1] = _background[index + 1].Insert(insert, ".");
        }
        internal void insertLeft(char origin, string sym, int time)
        {
            //origin: entity to use as origin; places symbol above this
            int index = findIndex(origin);
            _background[index] = _background[index].Replace($".{origin}", $"{sym}{origin}");
            Thread.Sleep(time);
            _background[index] = _background[index].Replace($"{sym}{origin}", $".{origin}");
        }
        internal void insertRight(char origin, string sym, int time)
        {
            //origin: entity to use as origin; places symbol above this
            int index = findIndex(origin);
            _background[index] = _background[index].Replace($"{origin}.", $"{origin}{sym}");
            Thread.Sleep(time);
            _background[index] = _background[index].Replace($"{origin}{sym}", $"{origin}.");
        }
    }
}
